# Generated by Django 5.2 on 2025-04-04 16:12

import datetime
import django.core.validators
import django.db.models.deletion
import main.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[main.models.CourseNameValidator])),
                ('startDate', models.DateField(default=datetime.datetime.now)),
                ('nbLectures', models.PositiveSmallIntegerField()),
                ('duration', models.DurationField()),
                ('coefficient', models.FloatField(validators=[django.core.validators.MinValueValidator(1, 'Value must be at list ONE.'), django.core.validators.MaxValueValidator(3, 'Value must be at most THREE.')])),
                ('courseAvatar', models.ImageField(blank=True, null=True, upload_to='images/course_avatars/', validators=[django.core.validators.FileExtensionValidator(['png', 'gif'])])),
            ],
            options={
                'db_table': 'courses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('familyName', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birthdate', models.DateField()),
                ('cin', models.CharField(max_length=8, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='The CIN must be of 8 digits.', regex='^\\d{8}$')])),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('familyName', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birthdate', models.DateField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/tutor_avatars/')),
                ('grade', models.CharField(choices=[('Assistant', 'Asst'), ('Associate', 'Assoc'), ('Professor', 'Prof'), ('Expert', 'Expr')], default='Assistant', max_length=50)),
            ],
            options={
                'db_table': 'tutors',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registrationDate', models.DateField(auto_now_add=True)),
                ('result', models.FloatField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
            ],
            options={
                'db_table': 'enrollments',
                'ordering': ['registrationDate'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('linkedIn', models.URLField()),
                ('github', models.URLField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='images/student_images/')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to='main.student')),
            ],
            options={
                'db_table': 'profiles',
                'ordering': ['linkedIn', 'github'],
            },
        ),
        migrations.AddField(
            model_name='student',
            name='courses',
            field=models.ManyToManyField(related_name='students', through='main.Enrollment', through_fields=('student', 'course'), to='main.course'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.student'),
        ),
        migrations.AddField(
            model_name='course',
            name='tutor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='main.tutor'),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locationNumber', models.CharField(max_length=10)),
                ('streetName', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('zipCode', models.CharField(max_length=10)),
                ('courses', models.ManyToManyField(db_table='courses_locations', related_name='locations', to='main.course')),
            ],
            options={
                'db_table': 'locations',
                'constraints': [models.UniqueConstraint(fields=('locationNumber', 'streetName', 'zipCode'), name='unique_location')],
            },
        ),
        migrations.AddConstraint(
            model_name='enrollment',
            constraint=models.UniqueConstraint(fields=('student', 'course'), name='unique_enrollment_student_course'),
        ),
    ]
